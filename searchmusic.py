import os
import telebot
from telebot import types
import yt_dlp
import re
from concurrent.futures import ThreadPoolExecutor

TOKEN = '7939631781:AAGBR38TykN2YyIh8dh2qQSRM11FtXGqTVY'  # ’ì’∏’≠’°÷Ä’´’∂’•÷Ñ ’±’•÷Ä ’¢’∏’ø’´ ’∂’∑’°’∂’°’¢’°’º’∏’æ
OWNER_ID = 5743254515  # ’ì’∏’≠’°÷Ä’´’∂’•÷Ñ ’±’•÷Ä Telegram ID-’∏’æ
BANNED_USERS_FILE = 'banned_users.txt'

bot = telebot.TeleBot(TOKEN)

DOWNLOAD_FOLDER = 'downloads'
os.makedirs(DOWNLOAD_FOLDER, exist_ok=True)

# ’ñ’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä ’°÷Ä’£’•’¨’æ’°’Æ ÷Ö’£’ø’°’ø’•÷Ä’•÷Ä’´ ’∞’•’ø ’°’∑’≠’°’ø’°’∂÷Ñ’´ ’∞’°’¥’°÷Ä
def get_banned_users():
    if not os.path.exists(BANNED_USERS_FILE):
        return set()
    with open(BANNED_USERS_FILE, 'r') as file:
        return set(line.strip() for line in file)

def add_banned_user(user_id):
    with open(BANNED_USERS_FILE, 'a') as file:
        file.write(f"{user_id}\n")

def remove_banned_user(user_id):
    banned_users = get_banned_users()
    if user_id in banned_users:
        banned_users.remove(user_id)
        with open(BANNED_USERS_FILE, 'w') as file:
            file.writelines(f"{uid}\n" for uid in banned_users)

# ’ç’ø’∏÷Ç’£’∏÷Ç’¥, ’©’• ÷Ö’£’ø’°’ø’•÷Ä’® ’°÷Ä’£’•’¨’æ’°’Æ ’ß
def is_user_banned(user_id):
    return str(user_id) in get_banned_users()

# /ban ’∞÷Ä’°’¥’°’∂’´ ’¥’∑’°’Ø’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
@bot.message_handler(commands=['ban'])
def ban_user(message):
    if message.from_user.id != OWNER_ID:
        bot.reply_to(message, "‚ùå ‘¥’∏÷Ç÷Ñ ’π’∏÷Ç’∂’•÷Ñ ’°’µ’Ω ’∞÷Ä’°’¥’°’∂’® ’Ø’°’ø’°÷Ä’•’¨’∏÷Ç ’´÷Ä’°’æ’∏÷Ç’∂÷Ñ÷â")
        return

    args = message.text.split()
    if len(args) != 2:
        bot.reply_to(message, "‚ö†Ô∏è ’ï’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥: /ban {÷Ö’£’ø’°’ø’´÷Ä’∏’ª ID ’Ø’°’¥ @username}")
        return

    identifier = args[1]

    if identifier.isdigit():  # ‘µ’©’• ID ’ß
        add_banned_user(identifier)
        bot.reply_to(message, f"‚úÖ ’ï’£’ø’°’ø’•÷Ä’® ID {identifier} ’°÷Ä’£’•’¨’°÷É’°’Ø’æ’°’Æ ’ß÷â")
        try:
            bot.send_message(int(identifier), "‚ùå ‘¥’∏÷Ç÷Ñ ’°÷Ä’£’•’¨’°÷É’°’Ø’æ’°’Æ ’•÷Ñ ’¢’∏’ø’∏÷Ç’¥÷â")
        except Exception as e:
            print(f"’ç’≠’°’¨ ÷Ö’£’ø’°’ø’´÷Ä’∏’ª {identifier} ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’∏÷Ç’≤’°÷Ä’Ø’¥’°’∂ ’™’°’¥’°’∂’°’Ø: {e}")
    elif identifier.startswith('@'):  # ‘µ’©’• username ’ß
        bot.reply_to(message, "‚ö†Ô∏è Username-’∏’æ ’°÷Ä’£’•’¨’°÷É’°’Ø’∏÷Ç’¥’® ’™’°’¥’°’∂’°’Ø’°’æ’∏÷Ä’°’∫’•’Ω ’°’∂’∞’°’Ω’°’∂’•’¨’´ ’ß÷â")
    else:
        bot.reply_to(message, "‚ùå ’ç’≠’°’¨ ÷Ü’∏÷Ä’¥’°’ø÷â ’ï’£’ø’°’£’∏÷Ä’Æ’•÷Ñ ID ’Ø’°’¥ @username÷â")

# /unban ’∞÷Ä’°’¥’°’∂’´ ’¥’∑’°’Ø’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
@bot.message_handler(commands=['unban'])
def unban_user(message):
    if message.from_user.id != OWNER_ID:
        bot.reply_to(message, "‚ùå ‘¥’∏÷Ç÷Ñ ’π’∏÷Ç’∂’•÷Ñ ’°’µ’Ω ’∞÷Ä’°’¥’°’∂’® ’Ø’°’ø’°÷Ä’•’¨’∏÷Ç ’´÷Ä’°’æ’∏÷Ç’∂÷Ñ÷â")
        return

    args = message.text.split()
    if len(args) != 2:
        bot.reply_to(message, "‚ö†Ô∏è ’ï’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥: /unban {÷Ö’£’ø’°’ø’´÷Ä’∏’ª ID}")
        return

    user_id = args[1]
    if not user_id.isdigit():
        bot.reply_to(message, "‚ùå ’ç’≠’°’¨ ID÷â")
        return

    remove_banned_user(user_id)
    bot.reply_to(message, f"‚úÖ ’ï’£’ø’°’ø’•÷Ä’® ID {user_id} ’°’∫’°’¢’¨’∏’Ø’°’æ’∏÷Ä’æ’°’Æ ’ß÷â")
    try:
        bot.send_message(int(user_id), "‚úÖ ‘¥’∏÷Ç÷Ñ ’°’∫’°’¢’¨’∏’Ø’°’æ’∏÷Ä’æ’°’Æ ’•÷Ñ ’¢’∏’ø’∏÷Ç’¥÷â")
    except Exception as e:
        print(f"’ç’≠’°’¨ ÷Ö’£’ø’°’ø’´÷Ä’∏’ª {user_id} ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’°’∂ ’∏÷Ç’≤’°÷Ä’Ø’¥’°’∂ ’™’°’¥’°’∂’°’Ø: {e}")

# YouTube ’∏÷Ä’∏’∂’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
def search_youtube(query):
    ydl_opts = {'quiet': True, 'noplaylist': True, 'extract_flat': True}
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        try:
            result = ydl.extract_info(f"ytsearch5:{query}", download=False)
            if result and 'entries' in result:
                return result['entries']
        except Exception as e:
            print(f"’à÷Ä’∏’∂’¥’°’∂ ’Ω’≠’°’¨: {e}")
    return []

# MP3 ’∂’•÷Ä’¢’•’º’∂’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂ 
def download_audio(url):
    ydl_opts = {
        'format': 'bestaudio/best',
        'outtmpl': f'{DOWNLOAD_FOLDER}/%(title)s.%(ext)s',
        'quiet': True,
        'cookies': 'cookies.txt',  # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ cookies —Ñ–∞–π–ª—É
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }],
    }
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info_dict = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info_dict).replace('.webm', '.mp3').replace('.m4a', '.mp3')
            return filename
    except Exception as e:
        print(f"’Ü’•÷Ä’¢’•’º’∂’¥’°’∂ ’Ω’≠’°’¨: {e}")
    return None


# /start ’∞÷Ä’°’¥’°’∂’´ ’¥’∑’°’Ø’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
@bot.message_handler(commands=['start'])
def send_welcome(message):
    if is_user_banned(message.from_user.id):
        bot.reply_to(message, "‚ùå ‘¥’∏÷Ç÷Ñ ’°÷Ä’£’•’¨’°÷É’°’Ø’æ’°’Æ ’•÷Ñ ÷á ’π’•÷Ñ ’Ø’°÷Ä’∏’≤ ÷Ö’£’ø’æ’•’¨ ’¢’∏’ø’´÷Å÷â")
        return
    welcome_text = (
        "üëã **‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø!**\n\n"
        "üéµ ‘µ’Ω ’Ø’°÷Ä’∏’≤ ’•’¥ ’£’ø’∂’•’¨ ’•÷Ä’£’•÷Ä YouTube-’∏÷Ç’¥ ÷á ’∏÷Ç’≤’°÷Ä’Ø’•’¨ MP3 ÷Ü’∏÷Ä’¥’°’ø’∏’æ÷â\n"
        "üîé ’à÷Ç’≤’°÷Ä’Ø’´÷Ä ’´’∂’± ’•÷Ä’£’´ ’°’∂’∏÷Ç’∂’®, ÷á ’•’Ω ’Ø’Ω’Ø’Ω’•’¥ ’∏÷Ä’∏’∂’∏÷Ç’¥’®÷â\n\n"
        "üìå **’ï÷Ä’´’∂’°’Ø:** `Miyagi I Got Love`\n\n"
        "üí° ’ï’£’∂’∏÷Ç’©’µ’°’∂ ’∞’°’¥’°÷Ä ’Ω’•’≤’¥’•÷Ñ /help÷â"
    )
    bot.send_message(message.chat.id, welcome_text, parse_mode="Markdown")

# /help ’∞÷Ä’°’¥’°’∂’´ ’¥’∑’°’Ø’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
@bot.message_handler(commands=['help'])
def send_help(message):
    if is_user_banned(message.from_user.id):
        bot.reply_to(message, "‚ùå ‘¥’∏÷Ç÷Ñ ’°÷Ä’£’•’¨’°÷É’°’Ø’æ’°’Æ ’•÷Ñ ÷á ’π’•÷Ñ ’Ø’°÷Ä’∏’≤ ÷Ö’£’ø’æ’•’¨ ’¢’∏’ø’´÷Å÷â")
        return
    help_text = (
        "üìñ **‘ª’∂’π’∫’•’Ω ÷Ö’£’ø’æ’•’¨ ’¢’∏’ø’´÷Å:**\n\n"
        "1. ’à÷Ç’≤’°÷Ä’Ø’•÷Ñ ’´’∂’± ’•÷Ä’£’´ ’Ø’°’¥ ’°÷Ä’ø’´’Ω’ø’´ ’°’∂’∏÷Ç’∂’®÷â\n"
        "2. ‘µ’Ω ÷Å’∏÷Ç’µ÷Å ’Ø’ø’°’¥ YouTube-’´ 5 ’¨’°’æ’°’£’∏÷Ç’µ’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®÷â\n"
        "3. ‘∏’∂’ø÷Ä’•÷Ñ ’•÷Ä’£’® ÷Å’°’∂’Ø’´÷Å÷â\n"
        "4. ‘µ÷Ä’£’® ’Ø’æ’•÷Ä’°÷É’∏’≠’æ’´ MP3 ’±÷á’°’π’°÷É’´ ÷á ’Ø’∏÷Ç’≤’°÷Ä’Ø’æ’´ ’±’•’¶÷â\n\n"
        "‚ùó **’Ü’∑’∏÷Ç’¥:**\n"
        "- ‘±’¥’¢’∏’≤’ª ’∫÷Ä’∏÷Å’•’Ω’® ’Ø’°÷Ä’∏’≤ ’ß ’ø÷á’•’¨ ’¥’´ ÷Ñ’°’∂’´ ÷Ä’∏’∫’•, ’Ø’°’≠’æ’°’Æ ’´’∂’ø’•÷Ä’∂’•’ø’´ ’°÷Ä’°’£’∏÷Ç’©’µ’∏÷Ç’∂’´÷Å÷â\n"
        "- ‘µ’©’• ’´’∂’π-’∏÷Ä ’¢’°’∂ ’π’´ ’°’∑’≠’°’ø’∏÷Ç’¥, ÷É’∏÷Ä’±’•÷Ñ ’Ø÷Ä’Ø’´’∂÷â\n\n"
        "üì© **’Ä’°÷Ä÷Å’•÷Ä’´ ’§’•’∫÷Ñ’∏÷Ç’¥ ’§’´’¥’•÷Ñ:** @ldftcer"
    )
    bot.send_message(message.chat.id, help_text, parse_mode="Markdown")

# ’è’•÷Ñ’Ω’ø’°’µ’´’∂ ’∞’°÷Ä÷Å’¥’°’∂ ’¥’∑’°’Ø’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
@bot.message_handler(func=lambda message: True)
def handle_query(message):
    if is_user_banned(message.from_user.id):
        bot.reply_to(message, "‚ùå ‘¥’∏÷Ç÷Ñ ’°÷Ä’£’•’¨’°÷É’°’Ø’æ’°’Æ ’•÷Ñ ÷á ’π’•÷Ñ ’Ø’°÷Ä’∏’≤ ÷Ö’£’ø’æ’•’¨ ’¢’∏’ø’´÷Å÷â")
        return

    query = message.text
    bot.send_message(
        message.chat.id,
        f"üîç **’à÷Ä’∏’∂’∏÷Ç’¥:** `{query}`\n\n‚è≥ ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’Ω’∫’°’Ω’•’¨ ’¥’´ ÷É’∏÷Ñ÷Ä...",
        parse_mode="Markdown"
    )
    results = search_youtube(query)
    
    if not results:
        bot.send_message(message.chat.id, "üòî ‘µ÷Ä’£’® ’π’£’ø’∂’æ’•÷Å÷â ’ì’∏÷Ä’±’•÷Ñ ’°’µ’¨ ’°’∂’∏÷Ç’∂÷â")
        return

    markup = types.InlineKeyboardMarkup()
    for result in results:
        if 'url' in result or 'id' in result:
            title = re.sub(r'\[.*?\]', '', result.get('title', 'No Title'))
            video_url = f"https://www.youtube.com/watch?v={result['id']}" if 'id' in result else result['url']
            button_text = f"üéß {title}"
            button = types.InlineKeyboardButton(text=button_text, callback_data=video_url)
            markup.add(button)

    bot.send_message(message.chat.id, "üí° ‘∏’∂’ø÷Ä’•÷Ñ ’•÷Ä’£’® ’Ω’ø’∏÷Ä÷á üëá", reply_markup=markup)

# ‘ø’∏’≥’°’Ø’´ ’Ω’•’≤’¥’¥’°’∂ ’¥’∑’°’Ø’¥’°’∂ ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if is_user_banned(call.from_user.id):
        bot.answer_callback_query(call.id, "‚ùå ‘¥’∏÷Ç÷Ñ ’°÷Ä’£’•’¨’°÷É’°’Ø’æ’°’Æ ’•÷Ñ÷â")
        return

    bot.answer_callback_query(call.id, "‚è≥ ’Ü’•÷Ä’¢’•’º’∂’∏÷Ç’¥ ’•’¥... ’≠’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’Ω’∫’°’Ω’•’¨...")
    
    def download_and_send():
        audio_file = download_audio(call.data)
        if audio_file:
            bot.send_message(call.message.chat.id, "‚úÖ **‘µ÷Ä’£’® ’∫’°’ø÷Ä’°’Ω’ø ’ß! ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’¥...**", parse_mode="Markdown")
            try:
                with open(audio_file, 'rb') as audio:
                    caption = "üéµ ’Ü’•÷Ä’¢’•’º’∂’æ’•’¨ ’ß @melodyi_bot | @ishkachka | @ww33ww33ww33ww"
                    bot.send_audio(call.message.chat.id, audio, title=os.path.basename(audio_file), caption=caption)
            except Exception as e:
                bot.send_message(call.message.chat.id, "‚ùå ’â’∞’°’ª’∏’≤’æ’•÷Å ’∏÷Ç’≤’°÷Ä’Ø’•’¨ ’•÷Ä’£’®÷â")
                print(f"’ç’≠’°’¨ ÷Ü’°’µ’¨’´ ’∏÷Ç’≤’°÷Ä’Ø’¥’°’∂ ’™’°’¥’°’∂’°’Ø: {e}")
            finally:
                os.remove(audio_file)
        else:
            bot.send_message(call.message.chat.id, "‚ùå ’â’∞’°’ª’∏’≤’æ’•÷Å ’∂’•÷Ä’¢’•’º’∂’•’¨ ’•÷Ä’£’®÷â")

    with ThreadPoolExecutor(max_workers=5) as executor:
        executor.submit(download_and_send)

print("\n" + "="*40)
print("üé∂ ‘≤’∏’ø’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’£’∏÷Ä’Æ’°÷Ä’Ø’æ’°’Æ ’ß! ’ç’∫’°’Ω’∏÷Ç’¥ ’•’¥ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´’∂...")
print("="*40 + "\n")

bot.polling(none_stop=True)
